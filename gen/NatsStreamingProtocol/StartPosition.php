<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: protoc/nats_streaming.proto

namespace NatsStreamingProtocol;

use UnexpectedValueException;

/**
 * Enum for start position type.
 *
 * Protobuf type <code>NatsStreamingProtocol.StartPosition</code>
 */
class StartPosition
{
    /**
     * Generated from protobuf enum <code>NewOnly = 0;</code>
     */
    const NewOnly = 0;
    /**
     * Generated from protobuf enum <code>LastReceived = 1;</code>
     */
    const LastReceived = 1;
    /**
     * Generated from protobuf enum <code>TimeDeltaStart = 2;</code>
     */
    const TimeDeltaStart = 2;
    /**
     * Generated from protobuf enum <code>SequenceStart = 3;</code>
     */
    const SequenceStart = 3;
    /**
     * Generated from protobuf enum <code>First = 4;</code>
     */
    const First = 4;

    private static $valueToName = [
        self::NewOnly => 'NewOnly',
        self::LastReceived => 'LastReceived',
        self::TimeDeltaStart => 'TimeDeltaStart',
        self::SequenceStart => 'SequenceStart',
        self::First => 'First',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

