<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: protoc/nats_streaming.proto

namespace NatsStreamingProtocol;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Response to a client connect
 *
 * Generated from protobuf message <code>NatsStreamingProtocol.ConnectResponse</code>
 */
class ConnectResponse extends \Google\Protobuf\Internal\Message
{
    /**
     * Prefix to use when publishing to this STAN cluster
     *
     * Generated from protobuf field <code>string pubPrefix = 1;</code>
     */
    private $pubPrefix = '';
    /**
     * Subject to use for subscription requests
     *
     * Generated from protobuf field <code>string subRequests = 2;</code>
     */
    private $subRequests = '';
    /**
     * Subject to use for unsubscribe requests
     *
     * Generated from protobuf field <code>string unsubRequests = 3;</code>
     */
    private $unsubRequests = '';
    /**
     * Subject for closing the stan connection
     *
     * Generated from protobuf field <code>string closeRequests = 4;</code>
     */
    private $closeRequests = '';
    /**
     * err string, empty/omitted if no error
     *
     * Generated from protobuf field <code>string error = 5;</code>
     */
    private $error = '';
    /**
     * Subject to use for subscription close requests
     *
     * Generated from protobuf field <code>string subCloseRequests = 6;</code>
     */
    private $subCloseRequests = '';
    /**
     * Subject to use for PING requests
     *
     * Generated from protobuf field <code>string pingRequests = 7;</code>
     */
    private $pingRequests = '';
    /**
     * Interval at which client should send PINGs (expressed in seconds).
     *
     * Generated from protobuf field <code>int32 pingInterval = 8;</code>
     */
    private $pingInterval = 0;
    /**
     * Maximum number of PINGs without a response after which the connection can be considered lost
     *
     * Generated from protobuf field <code>int32 pingMaxOut = 9;</code>
     */
    private $pingMaxOut = 0;
    /**
     * Protocol version the server is at
     *
     * Generated from protobuf field <code>int32 protocol = 10;</code>
     */
    private $protocol = 0;
    /**
     * Possibly used to sign acks, etc.
     *
     * Generated from protobuf field <code>string publicKey = 100;</code>
     */
    private $publicKey = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $pubPrefix
     *           Prefix to use when publishing to this STAN cluster
     *     @type string $subRequests
     *           Subject to use for subscription requests
     *     @type string $unsubRequests
     *           Subject to use for unsubscribe requests
     *     @type string $closeRequests
     *           Subject for closing the stan connection
     *     @type string $error
     *           err string, empty/omitted if no error
     *     @type string $subCloseRequests
     *           Subject to use for subscription close requests
     *     @type string $pingRequests
     *           Subject to use for PING requests
     *     @type int $pingInterval
     *           Interval at which client should send PINGs (expressed in seconds).
     *     @type int $pingMaxOut
     *           Maximum number of PINGs without a response after which the connection can be considered lost
     *     @type int $protocol
     *           Protocol version the server is at
     *     @type string $publicKey
     *           Possibly used to sign acks, etc.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Protoc\NatsStreaming::initOnce();
        parent::__construct($data);
    }

    /**
     * Prefix to use when publishing to this STAN cluster
     *
     * Generated from protobuf field <code>string pubPrefix = 1;</code>
     * @return string
     */
    public function getPubPrefix()
    {
        return $this->pubPrefix;
    }

    /**
     * Prefix to use when publishing to this STAN cluster
     *
     * Generated from protobuf field <code>string pubPrefix = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setPubPrefix($var)
    {
        GPBUtil::checkString($var, True);
        $this->pubPrefix = $var;

        return $this;
    }

    /**
     * Subject to use for subscription requests
     *
     * Generated from protobuf field <code>string subRequests = 2;</code>
     * @return string
     */
    public function getSubRequests()
    {
        return $this->subRequests;
    }

    /**
     * Subject to use for subscription requests
     *
     * Generated from protobuf field <code>string subRequests = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setSubRequests($var)
    {
        GPBUtil::checkString($var, True);
        $this->subRequests = $var;

        return $this;
    }

    /**
     * Subject to use for unsubscribe requests
     *
     * Generated from protobuf field <code>string unsubRequests = 3;</code>
     * @return string
     */
    public function getUnsubRequests()
    {
        return $this->unsubRequests;
    }

    /**
     * Subject to use for unsubscribe requests
     *
     * Generated from protobuf field <code>string unsubRequests = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setUnsubRequests($var)
    {
        GPBUtil::checkString($var, True);
        $this->unsubRequests = $var;

        return $this;
    }

    /**
     * Subject for closing the stan connection
     *
     * Generated from protobuf field <code>string closeRequests = 4;</code>
     * @return string
     */
    public function getCloseRequests()
    {
        return $this->closeRequests;
    }

    /**
     * Subject for closing the stan connection
     *
     * Generated from protobuf field <code>string closeRequests = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setCloseRequests($var)
    {
        GPBUtil::checkString($var, True);
        $this->closeRequests = $var;

        return $this;
    }

    /**
     * err string, empty/omitted if no error
     *
     * Generated from protobuf field <code>string error = 5;</code>
     * @return string
     */
    public function getError()
    {
        return $this->error;
    }

    /**
     * err string, empty/omitted if no error
     *
     * Generated from protobuf field <code>string error = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setError($var)
    {
        GPBUtil::checkString($var, True);
        $this->error = $var;

        return $this;
    }

    /**
     * Subject to use for subscription close requests
     *
     * Generated from protobuf field <code>string subCloseRequests = 6;</code>
     * @return string
     */
    public function getSubCloseRequests()
    {
        return $this->subCloseRequests;
    }

    /**
     * Subject to use for subscription close requests
     *
     * Generated from protobuf field <code>string subCloseRequests = 6;</code>
     * @param string $var
     * @return $this
     */
    public function setSubCloseRequests($var)
    {
        GPBUtil::checkString($var, True);
        $this->subCloseRequests = $var;

        return $this;
    }

    /**
     * Subject to use for PING requests
     *
     * Generated from protobuf field <code>string pingRequests = 7;</code>
     * @return string
     */
    public function getPingRequests()
    {
        return $this->pingRequests;
    }

    /**
     * Subject to use for PING requests
     *
     * Generated from protobuf field <code>string pingRequests = 7;</code>
     * @param string $var
     * @return $this
     */
    public function setPingRequests($var)
    {
        GPBUtil::checkString($var, True);
        $this->pingRequests = $var;

        return $this;
    }

    /**
     * Interval at which client should send PINGs (expressed in seconds).
     *
     * Generated from protobuf field <code>int32 pingInterval = 8;</code>
     * @return int
     */
    public function getPingInterval()
    {
        return $this->pingInterval;
    }

    /**
     * Interval at which client should send PINGs (expressed in seconds).
     *
     * Generated from protobuf field <code>int32 pingInterval = 8;</code>
     * @param int $var
     * @return $this
     */
    public function setPingInterval($var)
    {
        GPBUtil::checkInt32($var);
        $this->pingInterval = $var;

        return $this;
    }

    /**
     * Maximum number of PINGs without a response after which the connection can be considered lost
     *
     * Generated from protobuf field <code>int32 pingMaxOut = 9;</code>
     * @return int
     */
    public function getPingMaxOut()
    {
        return $this->pingMaxOut;
    }

    /**
     * Maximum number of PINGs without a response after which the connection can be considered lost
     *
     * Generated from protobuf field <code>int32 pingMaxOut = 9;</code>
     * @param int $var
     * @return $this
     */
    public function setPingMaxOut($var)
    {
        GPBUtil::checkInt32($var);
        $this->pingMaxOut = $var;

        return $this;
    }

    /**
     * Protocol version the server is at
     *
     * Generated from protobuf field <code>int32 protocol = 10;</code>
     * @return int
     */
    public function getProtocol()
    {
        return $this->protocol;
    }

    /**
     * Protocol version the server is at
     *
     * Generated from protobuf field <code>int32 protocol = 10;</code>
     * @param int $var
     * @return $this
     */
    public function setProtocol($var)
    {
        GPBUtil::checkInt32($var);
        $this->protocol = $var;

        return $this;
    }

    /**
     * Possibly used to sign acks, etc.
     *
     * Generated from protobuf field <code>string publicKey = 100;</code>
     * @return string
     */
    public function getPublicKey()
    {
        return $this->publicKey;
    }

    /**
     * Possibly used to sign acks, etc.
     *
     * Generated from protobuf field <code>string publicKey = 100;</code>
     * @param string $var
     * @return $this
     */
    public function setPublicKey($var)
    {
        GPBUtil::checkString($var, True);
        $this->publicKey = $var;

        return $this;
    }

}

